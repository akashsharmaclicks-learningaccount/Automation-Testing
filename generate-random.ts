export function capFirst(string: string): string {
  return string.charAt(0).toUpperCase() + string.slice(1);
}

function generateRandomString(alphabet: string, length: number): string {
  let randomString = "";
  for (let i = 0; i < length; i++) {
    const randomIndex = getRandomInt(0, alphabet.length);
    randomString += alphabet[randomIndex];
  }
  return randomString;
}

function getRandomInt(min: number, max: number): number {
  return Math.floor(Math.random() * (max - min) + min);
}

const usedNames: Set<string> = new Set();

export function generateRandomName(): string {
  const alphabet = "abcdefghijklmnopqrstuvwxyz";
  const nameLength = 8; // You can adjust the length of the generated names

  let randomName: string;

  do {
    randomName = generateRandomString(alphabet, nameLength);
  } while (usedNames.has(randomName));

  usedNames.add(randomName);

  // If all names have been used, reset the set
  if (usedNames.size === Math.pow(alphabet.length, nameLength)) {
    usedNames.clear();
  }

  return randomName;
}

export function generateRandomEmail(): string {
  const emailDomains = ["maildrop.cc", "mailinator.com"];
  const randomDomain =
    emailDomains[Math.floor(Math.random() * emailDomains.length)];
  const randomUsername = generateRandomName();

  return `${randomUsername.toLowerCase()}@${randomDomain}`;
}

export function generateInvalidEmail(): string {
  const emailDomains = ["maildrop.cc", "mailinator.com"];
  const randomDomain =
    emailDomains[Math.floor(Math.random() * emailDomains.length)];
  const randomUsername = generateRandomInvalidTaraUsername();

  return `${randomUsername.replace(" ", "").toLowerCase()} @ ${randomDomain}`;
}

export function generateRandomCategory(): string {
  const categories: string[] = [
    "Technology",
    "Finance",
    "Healthcare",
    "Education",
    "Manufacturing",
    "Retail",
    "Entertainment",
    "Hospitality",
    "Automotive",
    "Telecommunications",
    "Energy",
    "Agriculture",
    "Real Estate",
    "Transportation",
    "Fashion",
    "Media",
    "Consulting",
    "Non-profit",
    "Food and Beverage",
    "Travel",
  ];

  const randomCategory: string = categories[getRandomInt(0, categories.length)];

  return randomCategory;
}

export function generateRandomInvalidPassword(): string {
  const validChars =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  const passwordLength = getRandomInt(12, 25);
  let password = "";

  // Generate a random index to insert a whitespace
  const whitespaceIndex = getRandomInt(1, passwordLength - 2);

  for (let i = 0; i < passwordLength; i++) {
    // Insert a whitespace at the random index
    if (i === whitespaceIndex) {
      password += " ";
    } else {
      const randomIndex = getRandomInt(0, validChars.length);
      password += validChars.charAt(randomIndex);
    }
  }

  return password;
}

export function generateRandomPassword(): string {
  const uppercaseChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
  const lowercaseChars = "abcdefghijklmnopqrstuvwxyz";
  const numberChars = "0123456789";
  const specialChars = "!@#$%^&*()_+[]{}|;:,.<>?";

  const validChars =
    uppercaseChars + lowercaseChars + numberChars + specialChars;

  if (validChars.length === 0) {
    throw new Error("At least one character type should be selected.");
  }

  let password = "";
  for (let i = 0; i < 12; i++) {
    const randomIndex = Math.floor(Math.random() * validChars.length);
    password += validChars.charAt(randomIndex);
  }

  return password;
}

export function generateRandomPhoneNumber() {
  const min = 1000000000;
  const max = 9999999999;
  const randomPhoneNumber = Math.floor(Math.random() * (max - min + 1)) + min;
  return String(randomPhoneNumber);
}

export function generateRandomStreetAddress(): string {
  const streetNames: string[] = [
    "Maple",
    "Oak",
    "Cedar",
    "Pine",
    "Elm",
    "Birch",
    "Hickory",
    "Willow",
    "Spruce",
    "Magnolia",
    "Sycamore",
    "Cypress",
    "Dogwood",
    "Chestnut",
    "Juniper",
    "Locust",
    "Poplar",
    "Redwood",
    "Cottonwood",
    "Aspen",
  ];
  const streetTypes: string[] = [
    "St",
    "Ave",
    "Blvd",
    "Rd",
    "Ln",
    "Dr",
    "Cir",
    "Pl",
    "Way",
    "Terr",
    "Ct",
    "Pkwy",
    "Alley",
  ];

  const randomStreetName = streetNames[getRandomInt(0, streetNames.length)];
  const randomStreetType = streetTypes[getRandomInt(0, streetTypes.length)];
  const randomStreetNumber = getRandomInt(100, 9999);

  const randomCity = generateRandomName();
  const randomState = generateRandomName();
  const randomZipCode = getRandomInt(10000, 99999);

  return `${randomStreetNumber} ${randomStreetName} ${randomStreetType}, ${randomCity}, ${randomState} ${randomZipCode}`;
}

export function generateRandomCity(): string {
  const cities: string[] = [
    "New York",
    "Los Angeles",
    "Chicago",
    "Houston",
    "Phoenix",
    "Philadelphia",
    "San Antonio",
    "San Diego",
    "Dallas",
    "San Jose",
    "Austin",
    "Jacksonville",
    "San Francisco",
    "Indianapolis",
    "Columbus",
    "Fort Worth",
    "Charlotte",
    "Seattle",
    "Denver",
    "Washington",
    "Boston",
    "El Paso",
    "Nashville",
    "Portland",
    "Las Vegas",
    "Detroit",
    "Oklahoma City",
    "Memphis",
    "Louisville",
    "Baltimore",
    "Milwaukee",
    "Albuquerque",
    "Tucson",
    "Fresno",
    "Mesa",
    "Sacramento",
    "Atlanta",
    "Kansas City",
    "Colorado Springs",
    "Omaha",
    "Raleigh",
    "Miami",
    "Long Beach",
    "Virginia Beach",
    "Oakland",
    "Minneapolis",
    "Tulsa",
    "Arlington",
    "Tampa",
    "New Orleans",
    "Wichita",
    "Cleveland",
    "Bakersfield",
    "Aurora",
    "Anaheim",
    "Honolulu",
    "Santa Ana",
    "Riverside",
    "Corpus Christi",
    "Lexington",
    "Stockton",
    "St. Louis",
    "Saint Paul",
    "Henderson",
    "Pittsburgh",
    "Orlando",
    "Cincinnati",
    "Anchorage",
    "Greensboro",
    "Plano",
    "Newark",
    "Lincoln",
    "Toledo",
    "Henderson",
    "Fort Wayne",
    "Jersey City",
    "Saint Petersburg",
    "Chula Vista",
    "Norfolk",
    "Orlando",
    "Chandler",
    "Laredo",
    "Madison",
    "Durham",
    "Lubbock",
    "Winstonâ€“Salem",
    "Garland",
  ];

  const randomCity = cities[getRandomInt(0, cities.length)];
  return randomCity;
}

export function generateRandomUSPostalCode(): string {
  const min = 10000;
  const max = 99999;
  const randomPostalCode = Math.floor(Math.random() * (max - min + 1)) + min;
  return String(randomPostalCode);
}

export function generateRandomBusinessRole(): string {
  const roles: string[] = [
    "CEO",
    "CFO",
    "CTO",
    "COO",
    "CMO",
    "CIO",
    "VP of Marketing",
    "VP of Sales",
    "VP of Operations",
    "Director of Finance",
    "Director of IT",
    "Director of HR",
    "Senior Manager",
    "Project Manager",
    "Business Analyst",
    "Data Analyst",
    "Software Engineer",
    "Sales Manager",
    "Marketing Specialist",
    "Human Resources Generalist",
    "Customer Support Representative",
    "Operations Coordinator",
    "Financial Analyst",
    "Product Manager",
    "Quality Assurance Analyst",
    "IT Administrator",
    "Accountant",
    "Executive Assistant",
    "Legal Counsel",
    "Logistics Manager",
    "Procurement Specialist",
    "Public Relations Manager",
    "Research Scientist",
    "Technical Support Engineer",
    "UX/UI Designer",
    "Supply Chain Manager",
    "Training Specialist",
    "Risk Analyst",
    "Compliance Officer",
    "Business Development Manager",
    "Strategic Planner",
    "Brand Manager",
    "Social Media Coordinator",
    "Content Writer",
    "Graphic Designer",
    "Market Research Analyst",
    "Systems Analyst",
    "Network Administrator",
    "Database Administrator",
    "DevOps Engineer",
    "Scrum Master",
    "Technical Project Manager",
    "UI Developer",
    "UX Researcher",
    "Customer Success Manager",
    "Solutions Architect",
    "Cloud Architect",
    "Cybersecurity Analyst",
    "Product Owner",
    "Data Scientist",
    "Machine Learning Engineer",
    "AI Specialist",
    "Blockchain Developer",
    "Digital Marketing Manager",
    "E-commerce Manager",
    "Financial Controller",
    "Legal Assistant",
    "Warehouse Manager",
    "Inventory Specialist",
    "Health and Safety Officer",
    "Compensation Analyst",
    "Learning and Development Manager",
    "Employee Relations Specialist",
    "Talent Acquisition Specialist",
    "Public Affairs Specialist",
    "Event Planner",
    "Internal Auditor",
    "Business Process Analyst",
    "Change Management Specialist",
    "ERP Consultant",
    "CRM Specialist",
    "Tax Consultant",
    "Investment Analyst",
    "Financial Planner",
    "Operations Analyst",
    "IT Support Specialist",
    "Technical Writer",
    "Release Manager",
    "Customer Experience Specialist",
    "Community Manager",
    "Procurement Manager",
    "Quality Control Manager",
    "Risk Management Specialist",
    "Legal Advisor",
    "AI Ethics Consultant",
    "Renewable Energy Specialist",
    "Space Exploration Scientist",
    "Telecommunications Engineer",
    "Smart City Planner",
    "Blockchain Consultant",
    "Fintech Specialist",
    "Edtech Consultant",
    "Medtech Specialist",
    "Legaltech Consultant",
    "Agtech Specialist",
    "Business Intelligence Analyst",
    "ERP Administrator",
    "CRM Administrator",
    "Tax Advisor",
    "Investment Manager",
    "Financial Analyst",
    "Process Improvement Specialist",
    "User Interface Designer",
    "User Experience Researcher",
    "Customer Relationship Manager",
    "Cloud Solutions Architect",
    "IT Security Analyst",
    "DevSecOps Engineer",
    "IT Project Manager",
    "QA Automation Engineer",
    "Frontend Developer",
    "Backend Developer",
    "Full Stack Developer",
    "Customer Support Manager",
    "Innovation Manager",
    "Digital Transformation Specialist",
    "Content Strategist",
    "User Acquisition Specialist",
    "Brand Strategist",
    "SEO Specialist",
    "Supply Chain Analyst",
    "Learning and Development Specialist",
    "Human Resources Manager",
    "Talent Management Specialist",
    "Government Affairs Specialist",
    "Environmental, Social, and Governance (ESG) Specialist",
    "Data Privacy Officer",
    "Chief Diversity Officer",
    "Chief Sustainability Officer",
    "AI Governance Specialist",
    "Quantum Computing Scientist",
    "Augmented Reality Developer",
    "Virtual Reality Developer",
    "Game Developer",
    "Social Media Manager",
    "Digital Advertising Specialist",
    "Customer Insights Analyst",
    "AI Product Manager",
    "Smart City Engineer",
    "Cryptocurrency Analyst",
    "Regulatory Compliance Specialist",
    "Legal Operations Manager",
    "Innovation Strategist",
    "Business Continuity Manager",
    "Enterprise Architect",
    "Edge Computing Specialist",
    "Smart Manufacturing Engineer",
    "Smart Agriculture Specialist",
    "Smart Retail Analyst",
    "Smart Healthcare Consultant",
    "Smart Education Specialist",
    "Smart Finance Analyst",
    "Smart Transportation Engineer",
    "Smart Energy Analyst",
    "Smart Industry Specialist",
    "Smart Government Analyst",
    "Smart Services Specialist",
    "Smart Workforce Analyst",
    "Smart Supply Chain Specialist",
    "Smart Innovation Manager",
    "Smart Technology Analyst",
    "Smart Solutions Architect",
    "Smart Development Specialist",
    "Smart Future Analyst",
    "Smart Living Specialist",
    "Blockchain Integration Specialist",
    "Quantum Algorithms Researcher",
    "Telehealth Solutions Architect",
    "Robotic Process Automation Specialist",
    "Edge Computing Architect",
    "Renewable Energy Solutions Analyst",
    "Genomic Data Analyst",
    "5G Network Optimization Specialist",
    "IoT Sensors Engineer",
    "Virtual Reality Applications Developer",
    "Smart Logistics Solutions Analyst",
    "Biotech Research Scientist",
    "Pharmaceutical Innovations Analyst",
    "Telecommunications Infrastructure Engineer",
    "Smart Home Automation Specialist",
    "Cryptocurrency Trends Analyst",
    "Fintech Disruption Specialist",
    "Legaltech Advancements Analyst",
    "Edtech Platforms Specialist",
    "Medtech Breakthroughs Analyst",
    "Supply Chain Optimization Analyst",
    "Nanotechnology Applications Engineer",
    "Customer Experience Strategies Specialist",
    "Digital Transformation Trends Analyst",
    "Agtech Innovations Specialist",
    "Logistics Management Analyst",
    "Space Exploration Missions Analyst",
    "Autonomous Vehicle Technology Specialist",
    "Data Analytics Tools Engineer",
    "Wearable Technology Trends Analyst",
    "Smart Grid Technology Engineer",
    "3D Printing Applications Engineer",
    "Customer-Centric Strategies Specialist",
    "Innovative Finance Models Analyst",
    "Healthtech Solutions Specialist",
    "Gaming Industry Trends Analyst",
    "Social Media Impact Analyst",
    "E-commerce Advancements Specialist",
    "Cybersecurity Best Practices Analyst",
    "Big Data Analytics Engineer",
    "Mobile App Development Specialist",
    "Web Development Frameworks Engineer",
    "Cloud Computing Services Engineer",
    "Edge AI Applications Engineer",
  ];

  const randomRole: string = roles[Math.floor(Math.random() * roles.length)];
  return randomRole;
}

export function generateInvalidAccountNumber(): string {
  const min = 10;
  const max = 99;
  const randomAccountNumber = Math.floor(Math.random() * (max - min + 1)) + min;
  return String(randomAccountNumber);
}

export function generateRandomAccountNumber(): string {
  const min = 1000000000;
  const max = 9999999999;
  const randomAccountNumber = Math.floor(Math.random() * (max - min + 1)) + min;
  return String(randomAccountNumber);
}

export function generateRandomTaraUsername(): string {
  const validChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789";
  const usernameLength = getRandomInt(5, 16);
  let username = "";

  for (let i = 0; i < usernameLength; i++) {
    const randomIndex = getRandomInt(0, validChars.length);
    username += validChars.charAt(randomIndex);
  }

  return username;
}

export function generateRandomInvalidTaraUsername(): string {
  const validChars =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  const usernameLength = getRandomInt(5, 16); // Random length between 5 and 15 inclusive
  let username = "";

  // Determine the position to insert a white space
  const spaceIndex = getRandomInt(1, usernameLength - 1);

  for (let i = 0; i < usernameLength; i++) {
    if (i === spaceIndex) {
      username += " "; // Insert a white space at the specified position
    } else {
      const randomIndex = getRandomInt(0, validChars.length);
      username += validChars.charAt(randomIndex);
    }
  }

  return username;
}

export function generateInvalidZipCode(): string {
  const min = 10;
  const max = 99;
  const randomZipCode = Math.floor(Math.random() * (max - min + 1)) + min;
  return String(randomZipCode);
}

export function generateRandomZipCode(): string {
  const min = 10000;
  const max = 99999;
  const randomZipCode = Math.floor(Math.random() * (max - min + 1)) + min;
  return String(randomZipCode);
}

export function generateRandomTaraPassword(): string {
  const validChars =
    "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
  const passwordLength = getRandomInt(12, 25); // Random length between 12 and 24 inclusive
  let password = "";

  for (let i = 0; i < passwordLength; i++) {
    const randomIndex = getRandomInt(0, validChars.length);
    password += validChars.charAt(randomIndex);
  }

  return password;
}

const firstNames = [
  "John",
  "Jane",
  "Alex",
  "Emily",
  "Chris",
  "Katie",
  "Michael",
  "Sarah",
  "David",
  "Laura",
  "James",
  "Megan",
  "Robert",
  "Jessica",
  "Daniel",
  "Amanda",
  "Oliver",
  "Sophia",
  "Liam",
  "Emma",
  "Noah",
  "Ava",
  "Lucas",
  "Isabella",
  "Mason",
  "Mia",
  "Ethan",
  "Charlotte",
  "Logan",
  "Amelia",
  "Jackson",
  "Harper",
  "Aiden",
  "Evelyn",
  "Samuel",
  "Abigail",
  "Henry",
  "Ella",
  "Sebastian",
  "Aria",
  "Jack",
  "Scarlett",
  "Owen",
  "Chloe",
  "Wyatt",
  "Victoria",
  "Leo",
  "Grace",
  "Elijah",
  "Riley",
  "Matthew",
  "Lily",
  "Carter",
  "Zoe",
  "Grayson",
  "Nora",
  "Gabriel",
  "Layla",
  "Isaac",
  "Hannah",
  "Julian",
  "Lillian",
  "Anthony",
  "Addison",
  "Dylan",
  "Aubrey",
  "Lincoln",
  "Ellie",
  "Joshua",
  "Stella",
  "Nathan",
  "Natalie",
  "Ryan",
  "Zara",
  "Luke",
  "Maya",
  "Andrew",
  "Paisley",
  "Jaxon",
  "Mackenzie",
  "Roman",
  "Aurora",
  "Mila",
  "Penelope",
  "Savannah",
  "Kennedy",
  "Caroline",
  "Skylar",
  "Landon",
  "Hunter",
  "Cole",
  "Piper",
  "Declan",
  "Aurora",
  "Peyton",
  "Everly",
  "Christian",
  "Finn",
  "Aaron",
  "Bentley",
  "Asher",
  "Leo",
  "Eli",
  "Paisley",
  "Adam",
  "Caleb",
  "Ezekiel",
  "Xander",
  "Vincent",
  "Ashton",
  "Gavin",
  "Kai",
  "Tessa",
  "Vivian",
  "Alice",
  "Ivy",
  "Samantha",
  "Adeline",
  "Hailey",
  "Nevaeh",
  "Ruby",
  "Clara",
  "Willow",
  "Autumn",
  "Kinsley",
  "Naomi",
  "Rylee",
  "Lyla",
  "Valentina",
  "Everleigh",
  "Sienna",
  "Catalina",
  "Alyssa",
  "Eliza",
  "Isla",
  "Kayla",
  "Jade",
  "Camila",
  "Raelynn",
  "Sophie",
  "Josephine",
  "Gabriella",
  "Madeline",
  "Bailey",
  "Alaina",
  "Jasmine",
  "Emery",
  "Reagan",
  "Maddox",
  "Beau",
  "Ryder",
  "Jace",
  "Knox",
  "Kaden",
  "Nash",
  "Phoenix",
  "Zane",
  "Atlas",
  "Cash",
  "Elliot",
  "Brody",
  "Jude",
  "Emerson",
  "Tristan",
  "Kyrie",
  "Zion",
  "Theo",
  "Bryson",
  "Griffin",
  "Luka",
];

export function generateRandomFirstName(): string {
  const randomFirstName = firstNames[getRandomInt(0, firstNames.length - 1)];
  return randomFirstName;
}

const domainNames = [
  "google.com",
  "facebook.com",
  "amazon.com",
  "apple.com",
  "microsoft.com",
  "netflix.com",
  "linkedin.com",
  "twitter.com",
  "instagram.com",
  "meta.com",
  "youtube.com",
  "wikipedia.org",
  "yahoo.com",
  "reddit.com",
  "ebay.com",
  "pinterest.com",
  "bing.com",
  "tumblr.com",
  "quora.com",
  "twitch.tv",
  "spotify.com",
  "adobe.com",
  "salesforce.com",
  "airbnb.com",
  "uber.com",
  "dropbox.com",
  "slack.com",
  "github.com",
  "medium.com",
  "shopify.com",
  "paypal.com",
  "stripe.com",
  "mozilla.org",
  "bitbucket.org",
  "atlassian.com",
  "cloudflare.com",
  "zoom.us",
  "oracle.com",
  "ibm.com",
  "intel.com",
  "dell.com",
  "hp.com",
  "lenovo.com",
  "cisco.com",
  "huawei.com",
  "samsung.com",
  "sony.com",
  "panasonic.com",
  "lg.com",
  "toshiba.com",
  "nokia.com",
  "ericsson.com",
  "qualcomm.com",
  "broadcom.com",
  "nvidia.com",
  "amd.com",
  "tsmc.com",
  "micron.com",
  "western.digital",
  "seagate.com",
  "adp.com",
  "workday.com",
  "servicenow.com",
  "sap.com",
  "splunk.com",
  "tableau.com",
  "domino.com",
  "autodesk.com",
  "ansys.com",
  "cadence.com",
  "synopsys.com",
  "mathworks.com",
  "altair.com",
  "ptc.com",
  "siemens.com",
  "ge.com",
  "abb.com",
  "schneider-electric.com",
  "rockwellautomation.com",
  "honeywell.com",
  "emerson.com",
  "yokogawa.com",
  "aveva.com",
  "dassault-systemes.com",
  "hexagon.com",
  "intergraph.com",
  "esri.com",
  "infor.com",
  "epicor.com",
  "sage.com",
  "unit4.com",
  "netsuite.com",
  "exact.com",
  "visma.com",
  "xero.com",
  "freshbooks.com",
  "quickbooks.com",
  "zoho.com",
  "trello.com",
  "asana.com",
  "monday.com",
  "smartsheet.com",
  "clickup.com",
  "notion.so",
  "coda.io",
  "airtable.com",
  "milanote.com",
  "workflowy.com",
  "ticktick.com",
  "todoist.com",
  "any.do",
  "thingsapp.com",
  "omnifocus.com",
  "bear.app",
  "ulysses.app",
  "ia.net",
  "scrivener.com",
  "evernote.com",
  "onenote.com",
  "simplenote.com",
  "standardnotes.com",
  "notability.com",
  "goodnotes.com",
  "keep.google.com",
  "post-it.com",
  "mem.com",
  "roamresearch.com",
  "obsidian.md",
];

export function generateRandomDomainName(): string {
  const randomDomain = domainNames[getRandomInt(0, domainNames.length - 1)];
  return randomDomain;
}

const zipCodes = [
  "00501",
  "01001",
  "01002",
  "01003",
  "01004",
  "01005",
  "01007",
  "01008",
  "01009",
  "01010",
  "01011",
  "01012",
  "01013",
  "01014",
  "01020",
  "01021",
  "01022",
  "01026",
  "01027",
  "01028",
  "01029",
  "01030",
  "01031",
  "01032",
  "01033",
  "01034",
  "01035",
  "01036",
  "01037",
  "01038",
  "01039",
  "01040",
  "01041",
  "01050",
  "01053",
  "01054",
  "01056",
  "01057",
  "01059",
  "01060",
  "01061",
  "01062",
  "01063",
  "01066",
  "01068",
  "01069",
  "01070",
  "01071",
  "01072",
  "01073",
  "01074",
  "01075",
  "01077",
  "01079",
  "01080",
  "01081",
  "01082",
  "01083",
  "01084",
  "01085",
  "01086",
  "01088",
  "01089",
  "01090",
  "01092",
  "01093",
  "01094",
  "01095",
  "01096",
  "01097",
  "01098",
  "01099",
  "01101",
  "01102",
  "01103",
  "01104",
  "01105",
  "01106",
  "01107",
  "01108",
  "01109",
  "01111",
  "01115",
  "01116",
  "01118",
  "01119",
  "01128",
  "01129",
  "01133",
  "01138",
  "01139",
  "01144",
  "01151",
  "01152",
  "01199",
  "01201",
  "01202",
  "01203",
  "01220",
  "01222",
  "01223",
  "01224",
  "01225",
  "01226",
  "01227",
  "01229",
  "01230",
  "01235",
  "01236",
  "01237",
  "01238",
  "01240",
  "01242",
  "01243",
  "01244",
  "01245",
  "01247",
  "01252",
  "01253",
  "01254",
  "01255",
  "01256",
  "01257",
  "01258",
  "01259",
  "01260",
  "01262",
  "01263",
  "01264",
  "01266",
  "01267",
  "01270",
  "01301",
  "01302",
  "01330",
  "01331",
  "01337",
  "01338",
  "01339",
  "01340",
  "01341",
  "01342",
  "01343",
  "01344",
  "01346",
  "01347",
  "01349",
  "01350",
  "01351",
  "01354",
  "01355",
  "01360",
  "01364",
  "01366",
  "01367",
  "01368",
  "01370",
  "01373",
  "01375",
  "01376",
  "01378",
  "01379",
  "01380",
  "01420",
  "01430",
  "01431",
  "01432",
  "01434",
  "01436",
  "01438",
  "01440",
  "01441",
  "01450",
  "01451",
  "01452",
  "01453",
  "01460",
  "01462",
  "01463",
  "01464",
  "01467",
  "01468",
  "01469",
  "01470",
  "01471",
  "01472",
  "01473",
  "01474",
  "01475",
  "01477",
  "01501",
  "01503",
  "01504",
  "01505",
  "01506",
  "01507",
  "01508",
  "01509",
  "01510",
  "01515",
  "01516",
  "01517",
  "01518",
  "01519",
  "01520",
  "01521",
  "01522",
  "01523",
  "01524",
  "01525",
  "01526",
  "01527",
  "01529",
  "01531",
  "01532",
  "01534",
  "01535",
  "01536",
  "01537",
  "01538",
  "01540",
  "01541",
  "01542",
  "01543",
  "01545",
  "01546",
  "01550",
  "01560",
  "01561",
  "01562",
  "01564",
  "01566",
  "01568",
  "01569",
  "01570",
  "01571",
  "01580",
  "01581",
  "01582",
  "01583",
  "01585",
  "01586",
  "01588",
  "01590",
  "01601",
  "01602",
  "01603",
  "01604",
  "01605",
  "01606",
  "01607",
  "01608",
  "01609",
  "01610",
  "01611",
  "01612",
  "01613",
  "01614",
  "01615",
  "01653",
  "01654",
  "01655",
  "01701",
  "01702",
  "01703",
  "01704",
  "01705",
  "01718",
  "01719",
  "01720",
  "01721",
  "01730",
  "01731",
  "01740",
  "01741",
  "01742",
  "01745",
  "01746",
  "01747",
  "01748",
  "01749",
  "01752",
  "01754",
  "01756",
  "01757",
  "01760",
  "01770",
  "01772",
  "01773",
  "01775",
  "01776",
  "01778",
  "01784",
  "01801",
  "01803",
  "01805",
  "01807",
  "01808",
  "01810",
  "01812",
  "01813",
  "01815",
  "01821",
  "01822",
  "01824",
  "01826",
  "01827",
  "01830",
  "01831",
  "01832",
  "01833",
  "01834",
  "01835",
  "01840",
  "01841",
  "01842",
  "01843",
  "01844",
  "01845",
  "01850",
  "01851",
  "01852",
  "01853",
  "01854",
  "01860",
  "01862",
  "01863",
  "01864",
  "01865",
  "01866",
  "01867",
  "01876",
  "01879",
  "01880",
  "01885",
  "01886",
  "01887",
  "01888",
  "01889",
  "01890",
  "01899",
  "01901",
  "01902",
  "01903",
  "01904",
  "01905",
  "01906",
  "01907",
  "01908",
  "01910",
  "01913",
  "01915",
  "01921",
  "01922",
  "01923",
  "01929",
  "01930",
  "01931",
  "01936",
  "01937",
  "01938",
  "01940",
  "01944",
  "01945",
  "01949",
  "01950",
  "01951",
  "01952",
  "01960",
  "01961",
  "01962",
  "01965",
  "01966",
  "01969",
  "01970",
  "01971",
  "01982",
  "01983",
  "01984",
  "01985",
  "02018",
  "02019",
  "02020",
  "02021",
  "02025",
  "02026",
  "02027",
  "02030",
  "02031",
  "02032",
  "02035",
  "02038",
  "02040",
  "02041",
  "02043",
  "02044",
  "02045",
  "02047",
  "02048",
  "02050",
  "02051",
  "02052",
  "02053",
  "02054",
  "02055",
  "02056",
  "02059",
  "02060",
  "02061",
  "02062",
  "02065",
  "02066",
  "02067",
  "02070",
  "02071",
  "02072",
  "02081",
  "02090",
  "02093",
  "02108",
  "02109",
  "02110",
  "02111",
  "02112",
  "02113",
  "02114",
  "02115",
  "02116",
  "02117",
  "02118",
  "02119",
  "02120",
  "02121",
  "02122",
  "02123",
  "02124",
  "02125",
  "02126",
  "02127",
  "02128",
  "02129",
  "02130",
  "02131",
  "02132",
  "02133",
  "02134",
  "02135",
  "02136",
  "02137",
  "02138",
  "02139",
  "02140",
  "02141",
  "02142",
  "02143",
  "02144",
  "02145",
  "02148",
  "02149",
  "02150",
  "02151",
  "02152",
  "02153",
  "02155",
  "02156",
  "02163",
  "02169",
  "02170",
  "02171",
  "02176",
  "02180",
  "02184",
  "02185",
  "02186",
  "02187",
  "02188",
  "02189",
  "02190",
  "02191",
  "02196",
  "02199",
  "02201",
  "02203",
  "02204",
  "02205",
  "02206",
  "02207",
  "02210",
  "02211",
  "02212",
  "02215",
  "02217",
  "02222",
  "02238",
  "02239",
  "02241",
  "02266",
  "02269",
  "02283",
  "02284",
  "02293",
  "02295",
  "02297",
  "02298",
  "02301",
  "02302",
  "02303",
  "02304",
  "02305",
  "02322",
  "02324",
  "02325",
  "02327",
  "02330",
  "02331",
  "02332",
  "02333",
  "02334",
  "02337",
  "02338",
  "02339",
  "02340",
  "02341",
  "02343",
  "02344",
  "02345",
  "02346",
  "02347",
  "02348",
  "02349",
  "02350",
  "02351",
  "02355",
  "02356",
  "02357",
  "02358",
  "02359",
  "02360",
  "02361",
  "02362",
  "02364",
  "02366",
  "02367",
  "02368",
  "02370",
  "02375",
  "02379",
  "02382",
  "02420",
  "02421",
  "02445",
  "02446",
  "02447",
  "02451",
  "02452",
  "02453",
  "02454",
  "02455",
  "02456",
  "02457",
  "02458",
  "02459",
  "02460",
  "02461",
  "02462",
  "02464",
  "02465",
  "02466",
  "02467",
  "02468",
  "02471",
  "02472",
  "02474",
  "02475",
  "02476",
  "02477",
  "02478",
  "02479",
  "02481",
  "02482",
  "02492",
  "02493",
  "02494",
  "02495",
  "02532",
  "02534",
  "02535",
  "02536",
  "02537",
  "02538",
  "02539",
  "02540",
  "02541",
  "02542",
  "02543",
  "02552",
  "02553",
  "02554",
  "02556",
  "02557",
  "02558",
  "02559",
  "02561",
  "02562",
  "02563",
  "02564",
  "02565",
  "02568",
  "02571",
  "02573",
  "02574",
  "02575",
  "02576",
  "02584",
  "02585",
  "02601",
  "02630",
  "02631",
  "02632",
  "02633",
  "02634",
  "02635",
  "02636",
  "02637",
  "02638",
  "02639",
  "02641",
  "02642",
  "02643",
  "02644",
  "02645",
  "02646",
  "02647",
  "02648",
  "02649",
  "02650",
  "02651",
  "02652",
  "02653",
  "02655",
  "02657",
  "02659",
  "02660",
  "02661",
  "02662",
  "02663",
  "02664",
  "02666",
  "02667",
  "02668",
  "02669",
  "02670",
  "02671",
  "02672",
  "02673",
  "02675",
  "02702",
  "02703",
  "02712",
  "02713",
  "02714",
  "02715",
  "02717",
  "02718",
  "02719",
  "02720",
  "02721",
  "02722",
  "02723",
  "02724",
  "02725",
  "02726",
  "02738",
  "02739",
  "02740",
  "02741",
  "02742",
  "02743",
  "02744",
  "02745",
  "02746",
  "02747",
  "02748",
  "02760",
  "02761",
  "02762",
  "02763",
  "02764",
  "02766",
  "02767",
  "02768",
  "02769",
  "02770",
  "02771",
  "02777",
  "02779",
  "02780",
  "02783",
  "02790",
  "02791",
  "02792",
  "02793",
  "02801",
  "02802",
  "02804",
  "02806",
  "02807",
  "02808",
  "02809",
  "02812",
  "02813",
  "02814",
  "02815",
  "02816",
  "02817",
  "02818",
  "02822",
  "02823",
  "02824",
  "02825",
  "02826",
  "02827",
  "02828",
  "02829",
  "02830",
  "02831",
  "02832",
  "02833",
  "02835",
  "02836",
  "02837",
  "02838",
  "02839",
  "02840",
  "02841",
  "02842",
  "02852",
  "02857",
  "02858",
  "02859",
  "02860",
  "02861",
  "02862",
  "02863",
  "02864",
  "02865",
  "02871",
  "02872",
  "02873",
  "02874",
  "02875",
  "02876",
  "02877",
  "02878",
  "02879",
  "02880",
  "02881",
  "02882",
  "02883",
  "02885",
  "02886",
  "02887",
  "02888",
  "02889",
  "02891",
  "02892",
  "02893",
  "02894",
  "02895",
  "02896",
  "02898",
  "02901",
  "02902",
  "02903",
  "02904",
  "02905",
  "02906",
  "02907",
  "02908",
  "02909",
  "02910",
  "02911",
  "02912",
  "02914",
  "02915",
  "02916",
  "02917",
  "02918",
  "02919",
  "02920",
  "02921",
  "02940",
];

export function generateUSRandomZipCode(): string {
  const randomZipCode = zipCodes[getRandomInt(0, zipCodes.length - 1)];
  return randomZipCode;
}

function getRandomFloat(min: number, max: number, decimals: number): number {
  const str = (Math.random() * (max - min) + min).toFixed(decimals);
  return parseFloat(str);
}

export function generateRandomLongitude(): number {
  const minLongitude = -180;
  const maxLongitude = 180;
  const decimals = 6;
  return getRandomFloat(minLongitude, maxLongitude, decimals);
}

export function generateRandomLatitude(): number {
  const minLatitude = -90;
  const maxLatitude = 90;
  const decimals = 2; 
  return getRandomFloat(minLatitude, maxLatitude, decimals);
}
